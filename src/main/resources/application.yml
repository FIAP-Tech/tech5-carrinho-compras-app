server:
    port: ${PORT:8082}

spring:
    application:
        name: carrinho-compras-app
    datasource:
        url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/db_compras}
        username: ${DATASOURCE_USERNAME:postgres}
        password: ${DATASOURCE_PASSWORD:teste123}
        driver-class-name: org.postgresql.Driver
    jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        hibernate:
            ddl-auto: update  # Use 'update' to automatically update schema (create or update tables)
        properties:
            hibernate:
                jdbc:
                    time_zone: UTC  # Set JDBC time zone to UTC (optional, adjust as needed)
        show-sql: false  # Enable SQL logging (optional, for debugging)
        generate-ddl: false  # Generate DDL from entity models (optional, for schema creation)
        open-in-view: false  # Disable Open Session in View (OSIV) to prevent lazy loading issues

jwt:
    secret: 357638792F423F4428472B4B6250655368566D597133743677397A2443264629

api:
    usuario:
        endpoint: ${API_USUARIO_ENDPOINT:http://localhost:8082/api/usuarios}
        retry:
            max-tentativas: 3
            duracao: 5
    produto:
        endpoint: ${API_PRODUTO_ENDPOINT:http://localhost:8080/api/produtos}
        retry:
            max-tentativas: 3
            duracao: 5

messages:
    error:
        pedido-nao-encontrado: "Pedido não foi encontrado"
        usuario-nao-encontrado: "Usuário não foi encontrado"
        produto-nao-possui-estoque: "Produto não possui estoque: "
        produto-nao-encontrado: "Produto não foi encontrado id: "